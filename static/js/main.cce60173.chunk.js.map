{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","public/api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","href","Title","target","rel","className","src","Poster","alt","Plot","MoviesList","movies","map","imdbID","FindMovie","setMovies","useState","input","setInput","setMovie","error","setError","errorEmpty","setErrorEmpty","sameError","setSomeError","findMovies","a","endPoint","fetch","then","r","json","data","Response","htmlFor","value","type","id","placeholder","onChange","event","onClick","some","m","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cce60173.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (movie && (\n    <a\n      href={`https://duckduckgo.com/?q=!ducky+${movie.Title}+watch+online`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={movie.Poster}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\">{movie.Title}</p>\n            </div>\n          </div>\n          <div className=\"content\">\n            {movie.Plot}\n            <br />\n          </div>\n        </div>\n      </div>\n    </a>\n  ));\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[] | null;\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies && (movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      )))}\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport { moviesfromServer } from '../../public/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  setMovies: (a: Movie[]) => void\n  movies: Movie[] | null;\n}\n\nexport const FindMovie: React.FC <Props> = ({\n  setMovies,\n  movies,\n}) => {\n  const [input, setInput] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n  const [errorEmpty, setErrorEmpty] = useState(false);\n  const [sameError, setSomeError] = useState(false);\n\n  const findMovies = async () => {\n    setSomeError(false);\n    if (input) {\n      const data = await moviesfromServer(input);\n\n      if (data.Response !== 'False') {\n        setMovie(await data);\n      } else {\n        setMovie(null);\n        setError(true);\n      }\n    } else {\n      setError(true);\n    }\n\n    setInput('');\n  };\n\n  const add = () => {\n    if (movie && movies) {\n      if (!movies?.some(m => m !== movie)) {\n        setMovies([...movies, movie]);\n      } else {\n        setSomeError(true);\n      }\n    }\n\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={input}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={error ? 'input is-danger' : 'input'}\n              onChange={(event) => {\n                setInput(event.target.value);\n                setError(false);\n                setErrorEmpty(false);\n                setSomeError(false);\n              }}\n            />\n          </div>\n\n          {!!(error) && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title or server didn`t answered`\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovies}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                add();\n                if (!movie) {\n                  setErrorEmpty(true);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {!!(errorEmpty) && (\n          <h2 className=\"help is-danger\">\n            First find movie to add\n          </h2>\n        )}\n        {!!(sameError) && (\n          <h2 className=\"help is-danger\">\n            Already added\n          </h2>\n        )}\n        <MovieCard movie={movie} />\n      </div>\n    </>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=220a05b&';\n\nexport const moviesfromServer = (endPoint: string) => {\n  return fetch(`${BASE_URL}t=${endPoint}`)\n    .then(r => r.json());\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[] | null>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}